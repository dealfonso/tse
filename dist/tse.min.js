/* Copyright 2025 Carlos A. (https://github.com/dealfonso); License: https://opensource.org/license/mit/ */
(function(e){"use strict";if(typeof window==="undefined"){throw new Error("This script must be executed in a browser environment.")}const t="1.0.0";const r={};const n={attributePrefix:"data-bind-",templateDelimiter:/\${([^}]*)}/g,evalContext:window,observeMutations:true,debounceTime:50};let i={...n};let u=null;function a(t,e){try{const n={...e||{},...r};const o=new Function("context",`with(context) { return ${t}; }`);return o(n)}catch(e){console.error(`Error evaluating expression "${t}":`,e);return`[Error: ${e.message}]`}}function o(e){const t=e.nodeValue;if(!i.templateDelimiter.test(t))return;i.templateDelimiter.lastIndex=0;const n=t.replace(i.templateDelimiter,(e,t)=>{const n=a(t);return n!==undefined?n:e});if(n!==t){e.nodeValue=n}}function c(o){Array.from(o.attributes).forEach(e=>{if(e.name.startsWith(i.attributePrefix)){const t=e.name.substring(i.attributePrefix.length);const n=a(e.value);o[t]=n}})}function s(e=document.body){const t=document.createTreeWalker(e,NodeFilter.SHOW_TEXT|NodeFilter.SHOW_ELEMENT,null,false);let n;while(n=t.nextNode()){if(n.nodeType===Node.TEXT_NODE){o(n)}else if(n.nodeType===Node.ELEMENT_NODE){c(n)}}}function d(){if(!window.MutationObserver)return null;if(u){u.disconnect();u=null}let t;const e=new MutationObserver(e=>{clearTimeout(t);t=setTimeout(()=>{e.forEach(e=>{e.addedNodes.forEach(e=>{if(e.nodeType===Node.TEXT_NODE){o(e)}else if(e.nodeType===Node.ELEMENT_NODE){c(e);s(e)}});if(e.type==="attributes"){c(e.target)}if(e.type==="characterData"){o(e.target)}})},i.debounceTime)});e.observe(document.body,{childList:true,attributes:true,characterData:true,subtree:true});u=e;return e}window.DOMTemplateStringEvaluator={init:function(e={}){const t={...i};i={...i,...e};if(e.evalContext){Object.assign(r,e.evalContext)}const n=document.readyState!=="loading";const o=()=>{if(i.observeMutations){if(!u||t.debounceTime!==i.debounceTime||!t.observeMutations){d()}}else if(u){u.disconnect();u=null}};if(n){s();o()}else{document.addEventListener("DOMContentLoaded",()=>{s();o()})}return this},scan:function(e=document.body){s(e);return this},addToContext:function(e){Object.assign(r,e);return this},evaluate:function(e){return a(e,i.evalContext)},getConfig:function(){return{...i}},getVersion:function(){return t}};document.addEventListener("DOMContentLoaded",function(){DOMTemplateStringEvaluator.init()})})(window);